# -*- coding: utf-8 -*-
"""q2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GvdXFrxz12MacCHysh8fKgvNPXgCMc6Z
"""

#Task 1
#- Create a function that searches for all occurrences of a value (find_val) in a given list (lst) and replaces them with another value (replace_val).
#- lst must be a list.
#- Return the modified list.

#Answers
#list = [1, 2, 3, 2, 4, 2]
def replace_all(lst, find_val, replace_val):    #Type checks: Function first checks if the provided lst is indeed a list. If not, it raises a ValueError.
    if not isinstance(lst, list):               #List Comprehension: It then iterates through each item in the list, replacing it with replace_val if it matches find_val, or leaving it unchanged otherwise.
        raise ValueError("Input must be a list.")

    return [replace_val if item == find_val else item for item in lst]    #returns to the modified list.

# Task 2
# Invoke the function "find_and_replace" using the following scenarios:
# - [1, 2, 3, 4, 2, 2], 2, 5
# - ["apple", "banana", "apple"], "apple", "orange"

#Answers
def find_and_replace(lst, find_val, replace_val):     #Type checks: Function find_and_replace first verifies that the input lst is indeed a list. If not, it raises a ValueError.
    if not isinstance(lst, list):                     #It then uses a list comprehension to iterate over each element, replacing elements that match find_val with replace_val.
        raise ValueError("The provided input must be a list.")
    return [replace_val if item == find_val else item for item in lst]    #modified list return and output print for scenario 1 & 2.

# Scenario 1:
result1 = find_and_replace([1, 2, 3, 4, 2, 2], 2, 5)
print(result1)  # Output: [1, 5, 3, 4, 5, 5]

# Scenario 2:
result2 = find_and_replace(["apple", "banana", "apple"], "apple", "orange")
print(result2)  # Output: ['orange', 'banana', 'orange']