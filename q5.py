# -*- coding: utf-8 -*-
"""q5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OEQyCVGrnc041v_EiUZK9KPTN4nz4mYn
"""

#Task 1
   # - Create a function to check if the number (num) is divisible by another number (divisor).
   # - Both num and divisor must be numeric.
   # - Return True if num is divisible by divisor, False otherwise.

#Answers:
def check_divisibility(num, divisor):
    if not isinstance(num, (int, float)) or not isinstance(divisor, (int, float)):  #Type Check: Function checks that both num and divisor must be numeric types - either integers or floats.. If not, it raises a ValueError.
        raise ValueError("Both num and divisor must be numeric.")

    if divisor == 0:                                                                #Division by Zero: Checks if the divisor is zero so as to do not allow division error.
        raise ValueError("Divisor cannot be zero.")

   return num % divisor == 0                                                        #Divisibility Check: Used modulo operator (%) to determine if num is divisible by divisor. Return True if there is no remainder or remainder is zero,
                                                                                    #return False if there is a remainder.

# Task 2
# Invoke the function "check_divisibility" using the following scenarios:
# - 10, 2
# - 7, 3

#Answers:
def check_divisibility(num, divisor):
    if not isinstance(num, (int, float)) or not isinstance(divisor, (int, float)):  #Type Check: Function checks that both num and divisor must be numeric types - either integers or floats.. If not, it raises a ValueError.
        raise ValueError("Both num and divisor must be numeric.")

    if divisor == 0:                                                                #Division by Zero: Checks if the divisor is zero so as to do not allow division error.
        raise ValueError("Divisor cannot be zero.")

    return num % divisor == 0                                                       #Divisibility Check: Used modulo operator (%) to determine if num is divisible by divisor. Return True if there is no remainder or remainder is zero,
                                                                                    #return False if there is a remainder.
#Scenario 1:
result1 = check_divisibility(10, 2)
print("Scenario 1 - Dividing 10 by 2:", result1)  #return True as there is no remainder. Output print: True

#Scenario 2:
result2 = check_divisibility(7, 3)
print("Scenario 2 - Dividing 7 by 3:", result2)   #return False as there is remainder. Output print: False