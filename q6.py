# -*- coding: utf-8 -*-
"""q6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tRaO5A9RrNrhHezXFo52Q_pY3hBxZgeP
"""

#Task 1
    # - Create a function that finds the first negative number in a list (lst).
    # - Return the first negative number if found, otherwise return "No negatives".
    # - Use a while loop to implement this.

#Answers:
def find_first_negative(lst):
    if not isinstance(lst, list):                   #Type Check: Function first verifies that the input lst is indeed a list. If not, it raises a ValueError.
        raise ValueError("Input must be a list.")

    index = 0                                       #Initialization: An index variable is initialized to 0 to start iterating from the beginning of the list.
    while index < len(lst):                         #While Loop: The loop continues as long as index is less than the length of the list.
        if lst[index] < 0:                          #Inside the loop, checks if the current element (lst[index]) is negative.
            return lst[index]                       #If a negative number is found, it is immediately returned.
        index += 1                                  #If not, index is incremented to move to the next element.
    return "No negatives"                           #Completion: If the loop completes without finding a negative number, the function returns "No negatives".

# Task 2
# Invoke the function "find_first_negative" using the following scenario:
# - [3, 5, -1, 7, -2, 8]
# - [2, 10, 7, 0]

#Answers:
def find_first_negative(lst):
    if not isinstance(lst, list):                   #Type Check: Function first verifies that the input lst is indeed a list. If not, it raises a ValueError.
        raise ValueError("Input must be a list.")

    index = 0                                       #Initialization: An index variable is initialized to 0 to start iterating from the beginning of the list.
    while index < len(lst):                         #While Loop: The loop continues as long as index is less than the length of the list.
        if lst[index] < 0:                          #Inside the loop, checks if the current element (lst[index]) is negative.
            return lst[index]                       #If a negative number is found, it is immediately returned.
        index += 1                                  #If not, index is incremented to move to the next element.
    return "No negatives"                           #Completion: If the loop completes without finding a negative number, the function returns "No negatives".

#Scenario 1:
print("Scenario 1 - Find first negative number:", find_first_negative([3, 5, -1, 7, -2, 8]))  #Process: Function checks each element sequentially and finds -1 as the first negative number. Output print: -1

#Scenario 2:
print("Scenario 2 - Find first negative number:", find_first_negative([2, 10, 7, 0]))         #Process: Function checks all elements and finds no negative numbers. Output print: "No negatives"